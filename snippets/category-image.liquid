{% if block != blank and link != blank %}
    <div class="category-images-container" data-parent-handle="{{ link.handle }}">
        {% for child_link in link.links %}
            {% if child_link.type == 'collection_link' and child_link.object.featured_image %}
                {% assign image_url = child_link.object.featured_image | image_url: width: 300 %}
                {% assign image_alt = child_link.object.featured_image.alt | default: child_link.title %}

                <div class="category-image" data-image="{{ child_link.handle }}">
                    <img
                            src="{{ image_url }}"
                            alt="{{ image_alt }}"
                            width="145"
                            height="75"
                            loading="lazy"
                            class="category-image__img"
                    >
                </div>
            {% endif %}
        {% endfor %}
    </div>
{% endif %}


{% style %}
    .mega-menu-subcategory-list .mega-menu__link.mega-menu__link--level-2 {
    margin-bottom: 15px;
    border-bottom: 2px solid #000;
    padding: 0;
    color: #212121;
    font-size: 18px;
    font-weight: 500;
    width: fit-content;
    }
    .mega-menu-subcategory-list .mega-menu__link.mega-menu__link--level-2:hover {
    text-decoration: none;
    }
    .mega-menu-subcategory-list .category-image {
    display: none;
    transition: opacity 0.3s ease;
    width: 145px;
    height: 75px;
    margin-bottom: 15px;
    }
    .mega-menu-subcategory-list .category-image.active {
    display: block;
    }
    .mega-menu-subcategory-list .category-image__img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    object-position: left;
    }



{% endstyle %}

<script defer>

  // Only declare the class if it doesn't already exist
  if (typeof window.CategoryImageController === 'undefined') {
    window.CategoryImageController = class CategoryImageController {
      constructor() {
        this.init();
      }

      init() {
        document.addEventListener('DOMContentLoaded', () => {
          this.setupImageContainers();
        });
      }

      setupImageContainers() {
        const containers = document.querySelectorAll('.category-images-container');

        containers.forEach(container => {
          const parentHandle = container.dataset.parentHandle;
          const categoryImages = container.querySelectorAll('.category-image');
          const childLinks = document.querySelectorAll(`li[data-childlink="${parentHandle}"]`);

          // Show first image by default
          if (categoryImages.length > 0) {
            categoryImages[0].classList.add('active');
          }

          // Setup hover handlers
          childLinks.forEach(link => {
            link.addEventListener('mouseenter', (event) => {
              this.handleImageSwitch(event, categoryImages);
            });
          });
        });
      }

      handleImageSwitch(event, categoryImages) {
        const targetHandle = event.target.dataset.grandchildlink;

        if (!targetHandle) return;

        categoryImages.forEach(imageEl => {
          imageEl.classList.toggle('active', imageEl.dataset.image === targetHandle);
        });
      }
    }
  }

  // Initialize the controller
  new window.CategoryImageController();

</script>