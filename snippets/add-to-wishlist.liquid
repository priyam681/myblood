{% style %}
    .wishlist-button {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    padding: 12px 24px;
    background-color: #ffffff;
    border: 1px solid #e0e0e0;
    border-radius: 6px;
    cursor: pointer;
    font-size: 14px;
    font-weight: 500;
    color: #333333;
    transition: all 0.2s ease-in-out;
    text-decoration: none;
    }

    .wishlist-button:hover {
    background-color: #f8f8f8;
    border-color: #d0d0d0;
    transform: translateY(-1px);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }

    .wishlist-button:active {
    transform: translateY(0);
    }

    .wishlist-button span {
    display: inline-block;
    line-height: 1.2;
    }

    .wishlist-button .svg-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    }

    .wishlist-button .svg-wrapper svg {
    width: 18px;
    height: 18px;
    fill: none;
    stroke: currentColor;
    stroke-width: 2;
    transition: all 0.2s ease;
    }

    /* Active state when item is in wishlist */
    .wishlist-button.is-active {
    background-color: #fff0f0;
    border-color: #ffcdd2;
    color: #ff4444;
    }

    .wishlist-button.is-active .svg-wrapper svg {
    fill: #ff4444;
    stroke: #ff4444;
    }

    /* Loading state */
    .wishlist-button.is-loading {
    opacity: 0.7;
    cursor: wait;
    }

    /* Disabled state */
    .wishlist-button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    background-color: #f5f5f5;
    }

    /* Responsive styles */
    @media screen and (max-width: 768px) {
    .wishlist-button {
    padding: 10px 20px;
    font-size: 13px;
    }

    .wishlist-button .svg-wrapper svg {
    width: 16px;
    height: 16px;
    }
    }

    /* Dark mode support (optional) */
    @media (prefers-color-scheme: dark) {
    .wishlist-button {
    background-color: #2d2d2d;
    border-color: #404040;
    color: #ffffff;
    }

    .wishlist-button:hover {
    background-color: #353535;
    border-color: #505050;
    }

    .wishlist-button.is-active {
    background-color: #402020;
    border-color: #663333;
    }
    }

{% endstyle %}
<add-to-wishlist>
    {% if customer %}
        <button
                class="wishlist-button"
                data-product-id="{{ product.id }}"
                data-customer-id="{{ customer.id }}">
            <span>Add to Wishlist </span>
            <span class="svg-wrapper">
                                   {{- 'icon-heart.svg' | inline_asset_content -}}
            </span>
        </button>
    {% else %}
        <a href="/account/login" class="wishlist-button">
            <span>Add to Wishlist </span>
            <span class="svg-wrapper">
                {{- 'icon-heart.svg' | inline_asset_content -}}
            </span>
        </a>
    {% endif %}

</add-to-wishlist>

<script defer>
    if (!customElements.get('add-to-wishlist')) {

        class AddToWishlist extends HTMLElement {
          constructor() {
            super();
            this.addEventListener('click', this.toggleWishlistButton.bind(this));
          }

          connectedCallback(){

          }

          addToWishlist(){

          }

          async fetchWishlistMetafields(){
            let customerId = this.getAttribute('data-customer-id');
            const response = await fetch(`/admin/api/2025-04/customers/${customerId}.json`,
              {
                method: 'GET',
                headers: {
                  'X-Shopify-Access-Token': '{{ shop.api_key }}',
                  'Content-Type': 'application/json'
                }
              });
            const responseJson = await response.json();
            console.log(responseJson);
            return responseJson;
          }



          async toggleWishlistButton(isAdded) {
            const wishlists = this.fetchWishlistMetafields()
            console.log(wishlists);
          }

        }

        customElements.define('add-to-wishlist', AddToWishlist);
    }
</script>